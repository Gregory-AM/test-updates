name: Notify Discord on Release & Prerelease

on:
  release:
    types: [published, prereleased]

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_NAME: ${{ github.event.release.name }}
          RELEASE_BODY: ${{ github.event.release.body }}
          RELEASE_URL: ${{ github.event.release.html_url }}
          IS_PRERELEASE: ${{ github.event.release.prerelease }}
        run: |
          # Clean release notes (escape newlines & quotes)
          RELEASE_NOTES=$(jq -R -s '.' <<< "$RELEASE_BODY")

          # Function to send payload
          send_payload() {
            curl -X POST "$DISCORD_WEBHOOK" \
              -H "Content-Type: application/json" \
              -d "$1"
          }

          # Get UTC timestamp safely
          TIMESTAMP=$(date --utc +%Y-%m-%dT%H:%M:%SZ)

          # Detect release type
          if [[ "$RELEASE_TAG" == "v3.0.0" ]]; then
            # Initial Release
            JSON=$(cat <<'EOF'
{
  "embeds": [
    {
      "color": 7308441,
      "title": "INITIAL RELEASE - [Re]Structure v3.0.0",
      "description": "This is the initial release for the [Re]Structure plugin.",
      "footer": {
        "text": "Released",
        "icon_url": "https://cdn.discordapp.com/avatars/1368444615224459274/e3ebe26579536ab912c23528f67f3281.webp?size=80"
      },
      "timestamp": "$TIMESTAMP",
      "url": "$RELEASE_URL",
      "fields": [
        {
          "name": "RELEASE NOTES:",
          "value": "$RELEASE_NOTES"
        }
      ]
    }
  ]
}
EOF
)
            send_payload "$JSON"

          elif [[ "$RELEASE_TAG" == *"rc"* ]]; then
            # Release Candidate
            JSON=$(cat <<'EOF'
{
  "embeds": [
    {
      "title": "RELEASE CANDIDATE - $RELEASE_NAME",
      "description": "**Release candidates _can be_ used for production use.**\nThis release is for final checks before stable release.\n\nYou can report issues [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues).",
      "url": "$RELEASE_URL",
      "timestamp": "$TIMESTAMP",
      "color": 16760124,
      "footer": {
        "text": "Released",
        "icon_url": "https://cdn.discordapp.com/avatars/1368444615224459274/e3ebe26579536ab912c23528f67f3281.webp?size=80"
      },
      "author": {
        "name": "GitHub: @Gregory-AM",
        "icon_url": "https://avatars.githubusercontent.com/u/83489100?v=4&size=64"
      },
      "fields": [
        {
          "name": "RELEASE NOTES:",
          "value": "$RELEASE_NOTES"
        }
      ]
    }
  ]
}
EOF
)
            send_payload "$JSON"

          elif [[ "$RELEASE_TAG" == *"beta"* || "$IS_PRERELEASE" == "true" ]]; then
            # Beta / Pre-release
            JSON=$(cat <<'EOF'
{
  "embeds": [
    {
      "title": "PRE-RELEASE - $RELEASE_NAME",
      "description": "This release is for testing and bug hunting.\n\n**Do NOT use in main workspace!**\n\nReport bugs [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues).",
      "url": "$RELEASE_URL",
      "timestamp": "$TIMESTAMP",
      "color": 16760124,
      "footer": {
        "text": "Released",
        "icon_url": "https://cdn.discordapp.com/avatars/1368444615224459274/e3ebe26579536ab912c23528f67f3281.webp?size=80"
      },
      "author": {
        "name": "GitHub: @Gregory-AM",
        "icon_url": "https://avatars.githubusercontent.com/u/83489100?v=4&size=64"
      },
      "fields": [
        {
          "name": "RELEASE NOTES:",
          "value": "$RELEASE_NOTES"
        }
      ]
    }
  ]
}
EOF
)
            send_payload "$JSON"

          else
            # Stable update (Major, Minor, Patch)
            VERSION_TYPE="PATCH UPDATE"
            if [[ "$RELEASE_TAG" =~ ^v([0-9]+)\.([0-9]+)\.0$ ]]; then
              if [[ "${BASH_REMATCH[2]}" == "0" ]]; then
                VERSION_TYPE="MAJOR UPDATE"
              else
                VERSION_TYPE="MINOR UPDATE"
              fi
            fi

            JSON=$(cat <<'EOF'
{
  "embeds": [
    {
      "title": "$VERSION_TYPE - $RELEASE_NAME",
      "description": "## $VERSION_TYPE\n\nThis is the latest stable release of **[Re]Structure**.",
      "url": "$RELEASE_URL",
      "timestamp": "$TIMESTAMP",
      "color": 7929683,
      "footer": {
        "text": "Released",
        "icon_url": "https://cdn.discordapp.com/avatars/1368444615224459274/e3ebe26579536ab912c23528f67f3281.webp?size=80"
      },
      "author": {
        "name": "GitHub: @Gregory-AM",
        "icon_url": "https://avatars.githubusercontent.com/u/83489100?v=4&size=64"
      },
      "fields": [
        {
          "name": "BUG REPORTING:",
          "value": "Report bugs [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues)."
        },
        {
          "name": "RELEASE NOTES:",
          "value": "$RELEASE_NOTES"
        }
      ]
    }
  ]
}
EOF
)
            send_payload "$JSON"
          fi
