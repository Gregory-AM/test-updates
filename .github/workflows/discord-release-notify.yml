name: Release Notification

on:
  release:
    types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Extract release info
        id: release_info
        run: |
          echo "RELEASE_TAG=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
          echo "RELEASE_NAME=${{ github.event.release.name }}" >> "$GITHUB_ENV"
          echo "RELEASE_BODY=${{ github.event.release.body }}" >> "$GITHUB_ENV"
          echo "RELEASE_URL=${{ github.event.release.html_url }}" >> "$GITHUB_ENV"
          echo "IS_PRERELEASE=${{ github.event.release.prerelease }}" >> "$GITHUB_ENV"

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          RELEASE_TAG: ${{ env.RELEASE_TAG }}
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
          RELEASE_BODY: ${{ env.RELEASE_BODY }}
          RELEASE_URL: ${{ env.RELEASE_URL }}
          IS_PRERELEASE: ${{ env.IS_PRERELEASE }}
        run: |
          # Clean release notes
          RELEASE_NOTES=$(echo "$RELEASE_BODY" | sed ':a;N;$!ba;s/\r//g')

          send_payload() {
            curl -X POST "$DISCORD_WEBHOOK_URL" \
              -H "Content-Type: application/json" \
              -d "$1"
          }

          # Determine Release Type
          if [[ "$RELEASE_TAG" == "v3.0.0" ]]; then
            VERSION_TYPE="INITIAL RELEASE"
            COLOR=7308441
            DESCRIPTION="This is the initial release for the [Re]Structure plugin."
            FOOTER="Released"
            BUG_FIELD=""
          elif [[ "$RELEASE_TAG" == *"rc"* ]]; then
            VERSION_TYPE="RELEASE CANDIDATE - $RELEASE_NAME"
            COLOR=16760124
            DESCRIPTION="**Release candidates _can be_ used for production use.**\nThis release is for final checks before stable release.\n\nYou can report issues [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues)."
            FOOTER="Release Candidate"
            BUG_FIELD=""
          elif [[ "$RELEASE_TAG" == *"beta"* || "$IS_PRERELEASE" == "true" ]]; then
            VERSION_TYPE="PRE-RELEASE - $RELEASE_NAME"
            COLOR=16760124
            DESCRIPTION="This release is for testing and bug hunting.\n\n**Do NOT use in main workspace!**\n\nReport bugs [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues)."
            FOOTER="Pre-release"
            BUG_FIELD=""
          else
            # Stable update (Major, Minor, Patch)
            VERSION_TYPE="PATCH UPDATE - $RELEASE_NAME"
            COLOR=7929683
            DESCRIPTION="## Patch Update\n\nThis is the latest stable release of **[Re]Structure**."
            FOOTER="Released"
            BUG_FIELD='{
              "name": "BUG REPORTING:",
              "value": "Report bugs [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues)."
            },'

            # Detect Major or Minor
            if [[ "$RELEASE_TAG" =~ ^v([0-9]+)\.([0-9]+)\.0$ ]]; then
              if [[ "${BASH_REMATCH[2]}" == "0" ]]; then
                VERSION_TYPE="MAJOR UPDATE - $RELEASE_NAME"
                DESCRIPTION="## Major update\n\nThis is the latest stable release of **[Re]Structure**."
              else
                VERSION_TYPE="MINOR UPDATE - $RELEASE_NAME"
                DESCRIPTION="## Minor update\n\nLatest stable release."
              fi
            fi
          fi

          # Build JSON payload (safe using jq)
          JSON=$(jq -n --arg title "$VERSION_TYPE" \
                       --arg description "$DESCRIPTION" \
                       --arg url "$RELEASE_URL" \
                       --arg timestamp "$(date --utc +%Y-%m-%dT%H:%M:%SZ)" \
                       --argjson color "$COLOR" \
                       --arg footer "$FOOTER" \
                       --arg releaseNotes "$RELEASE_NOTES" \
                       --arg bugField "$BUG_FIELD" \
                       '{
                         "embeds": [
                           {
                             "title": $title,
                             "description": $description,
                             "url": $url,
                             "timestamp": $timestamp,
                             "color": $color,
                             "footer": {
                               "text": $footer,
                               "icon_url": "https://cdn.discordapp.com/avatars/1368444615224459274/e3ebe26579536ab912c23528f67f3281.webp?size=80"
                             },
                             "author": {
                               "name": "GitHub: @Gregory-AM",
                               "icon_url": "https://avatars.githubusercontent.com/u/83489100?v=4&size=64"
                             },
                             "fields": (
                               [$bugField | select(. != "") | fromjson] + [
                                 {
                                   "name": "RELEASE NOTES:",
                                   "value": $releaseNotes
                                 }
                               ]
                             )
                           }
                         ]
                       }')

          # Send the payload
          send_payload "$JSON"
