name: Notify Discord on Release

on:
  release:
    types: [published]

jobs:
  notify-discord:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Release Info
        id: release_info
        run: |
          echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          echo "release_name=${{ github.event.release.name }}" >> $GITHUB_OUTPUT
          echo "release_url=${{ github.event.release.html_url }}" >> $GITHUB_OUTPUT
          echo "is_prerelease=${{ github.event.release.prerelease }}" >> $GITHUB_OUTPUT
          echo "published_at=${{ github.event.release.published_at }}" >> $GITHUB_OUTPUT

          # Process release body - convert to JSON string
          BODY='${{ github.event.release.body }}'
          CLEAN_BODY=$(echo "$BODY" | jq -Rs)
          echo "clean_body=$CLEAN_BODY" >> $GITHUB_OUTPUT

          # Determine release type
          tag="${{ github.event.release.tag_name }}"
          is_prerelease="${{ github.event.release.prerelease }}"
          version="${tag#v}"

          # Parse version components
          IFS='.-' read -ra PARTS <<< "$version"
          major="${PARTS[0]}"
          minor="${PARTS[1]}"
          patch="${PARTS[2]}"

          TYPE="PATCH"

          if [[ "$tag" == "v3.0.0" ]]; then
            TYPE="INITIAL"
          elif [[ "$is_prerelease" == "true" ]]; then
            TYPE="PRERELEASE"
          elif [[ "$tag" == *"rc"* ]]; then
            TYPE="RC"
          elif [[ "$minor" == "0" && "$patch" == "0" ]]; then
            TYPE="MAJOR"
          elif [[ "$patch" == "0" ]]; then
            TYPE="MINOR"
          fi

          echo "release_type=$TYPE" >> $GITHUB_OUTPUT

      # Send Discord notification using a specialized Discord embed builder action
      - name: Discord notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: >
            {
              "embeds": [
                {
                  "title": "${{ steps.release_info.outputs.release_type == 'INITIAL' && 'üöÄ INITIAL RELEASE - [Re]Structure v3.0.0' || 
                                steps.release_info.outputs.release_type == 'PRERELEASE' && 'üß™ PRE-RELEASE - ' || 
                                steps.release_info.outputs.release_type == 'RC' && 'üîç RELEASE CANDIDATE - ' || 
                                steps.release_info.outputs.release_type == 'MAJOR' && 'üéâ MAJOR UPDATE - ' || 
                                steps.release_info.outputs.release_type == 'MINOR' && '‚ú® MINOR UPDATE - ' || 
                                'üîß PATCH UPDATE - ' }}${{ steps.release_info.outputs.release_name }}",
                  "description": "${{ steps.release_info.outputs.release_type == 'INITIAL' && 'This is the initial release for the [Re]Structure plugin.' || 
                                      steps.release_info.outputs.release_type == 'PRERELEASE' && 'This release is for testing and bug hunting.\n\n**Do NOT use in main workspace!**\n\nReport bugs [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues).' ||
                                      steps.release_info.outputs.release_type == 'RC' && '**Release candidates _can be_ used for production use.**\nThis release is for final checks before stable release.\n\nYou can report issues [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues).' ||
                                      steps.release_info.outputs.release_type == 'MAJOR' && '## Major update\n\nThis is the latest stable release of **[Re]Structure**.' ||
                                      steps.release_info.outputs.release_type == 'MINOR' && '## Minor update\n\nLatest stable release.' ||
                                      'Patch update released.' }}",
                  "url": "${{ steps.release_info.outputs.release_url }}",
                  "timestamp": "${{ steps.release_info.outputs.published_at }}",
                  "color": "${{ steps.release_info.outputs.release_type == 'INITIAL' && 7308441 || 
                                steps.release_info.outputs.release_type == 'PRERELEASE' || steps.release_info.outputs.release_type == 'RC' && 16760124 || 
                                steps.release_info.outputs.release_type == 'MAJOR' || steps.release_info.outputs.release_type == 'MINOR' && 7929683 || 
                                3323461 }}",
                  "footer": {
                    "text": "${{ steps.release_info.outputs.release_type == 'INITIAL' && 'Released' || 
                                steps.release_info.outputs.release_type == 'PRERELEASE' && 'Pre-release' || 
                                steps.release_info.outputs.release_type == 'RC' && 'Release Candidate' || 
                                steps.release_info.outputs.release_type == 'MAJOR' && 'Major' || 
                                steps.release_info.outputs.release_type == 'MINOR' && 'Minor' || 
                                'Patch' }}",
                    "icon_url": "https://cdn.discordapp.com/avatars/1368444615224459274/e3ebe26579536ab912c23528f67f3281.webp?size=80"
                  },
                  "author": {
                    "name": "GitHub: @Gregory-AM",
                    "icon_url": "https://avatars.githubusercontent.com/u/83489100?v=4&size=64"
                  },
                  "fields": [
                    ${{ steps.release_info.outputs.release_type == 'MAJOR' && '{
                      "name": "BUG REPORTING:",
                      "value": "Report bugs [here](https://github.com/GregoryAM-SP/ReStructure-Plugin/issues)."
                    },' || '' }}
                    {
                      "name": "RELEASE NOTES:",
                      "value": ${{ steps.release_info.outputs.clean_body }}
                    }
                  ]
                }
              ]
            }
